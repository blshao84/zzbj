# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest
#    # Service containers to run with `container-job`
#    services:
#      # Label used to access the service container
#      postgres:
#        # Docker Hub image
#        image: postgres:9-alpine
#        # Provide the password for postgres
#        env:
#          POSTGRES_PASSWORD: kEaLJ9ZERLLN
#          POSTGRES_USER: trans
#          POSTGRES_DB: trans
#        ports:
#          - 5432:5432
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Install Docker and Docker Machine
        run: |
          mkdir -p ~/.docker/machine/cache
          curl -Lo ~/.docker/machine/cache/boot2docker.iso https://github.com/boot2docker/boot2docker/releases/download/v19.03.12/boot2docker.iso
          brew install docker docker-machine
          docker-machine create --driver virtualbox default
          docker-machine env default
          docker-machine ip
      - name: Run postgres:9-alpine in Docker
        run: |
          eval "$(docker-machine env default)"
          docker pull postgres:9-alpine
          docker container run --rm --name bct-postgresql -e POSTGRES_USER=trans -e POSTGRES_PASSWORD=kEaLJ9ZERLLN -e POSTGRES_DB=trans -p 5432:5432 -d postgres:9-alpine -c max_connections=300
          docker ps -a
      - uses: actions/checkout@v2
      - name: Set up NPM
        uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
      - name: Install PM2
        run: npm install pm2 -g
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Set up Python3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: 'x64'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cchardet==2.1.7
          pip install certifi==2020.12.5
          pip install chardet==4.0.0
          pip install fileutil==1.0.4
          pip install idna==2.10
          pip install lxml==4.6.2
          pip install numpy==1.19.1
          pip install pandas==1.2.0
          pip install pathlib==1.0.1
          pip install psycopg2-binary==2.8.6
          pip install PyMySQL==0.10.1
          pip install python-dateutil==2.8.1
          pip install pytz==2020.5
          pip install PyYAML==5.3.1
          pip install requests==2.25.1
          pip install six==1.15.0
          pip install urllib3==1.26.2
          pip install xlrd==1.2.0
          pip install XlsxWriter==1.3.7
          pip install xmldiff==2.4
          pip install pytest==6.2.1
          pip install pytest-ordering==0.6
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew --parallel build
      - name: Install Artifacts
        run: ./gradlew installLocal
      - name: Import DDL
        run: |
          eval "$(docker-machine env default)"
          docker ps -a
          cat trans-schemas.sql | docker exec -i bct-postgresql psql -U trans
          sleep 5
          cat commerce_model.sql | docker exec -i bct-postgresql psql -U trans
          sleep 5
          cat data_source.sql | docker exec -i bct-postgresql psql -U trans
          sleep 5
          cat history_data.sql | docker exec -i bct-postgresql psql -U trans
          sleep 5
        working-directory: ./csi-trans/script/sql/db_ddl
        env:
          PGPASSWORD: kEaLJ9ZERLLN
      - name: Import DML
        run: |
          eval "$(docker-machine env default)"
          cat base_element.sql | docker exec -i bct-postgresql psql -U trans
          sleep 5
          cat report_base_config.sql | docker exec -i bct-postgresql psql -U trans
          sleep 5
          cat structure.sql | docker exec -i bct-postgresql psql -U trans
          sleep 5
        working-directory: ./csi-trans/script/sql/db_dml
        env:
          PGPASSWORD: kEaLJ9ZERLLN
      - name: Launch Web Server
        run: |
          pm2 start actions.config.js
          sleep 30
        working-directory: ./csi-trans
      - name: Smoke Test
        run: ./gradlew smokeTest
